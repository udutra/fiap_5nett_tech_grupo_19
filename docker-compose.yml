services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "1q2w3e4r@#$"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    networks:
      - mynw

  fiap_5nett_tech:
    image: ${DOCKER_REGISTRY-}fiap_5nett_tech.api
    ports:
      - 7015:7015
    build:
      context: .
      dockerfile: fiap_5nett_tech.api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=7015
    networks:
      - mynw

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - mynw

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - mynw

networks:
  mynw:

  fiap_5nett_tech.contact:
    image: fiap_5nett_tech.contact
    build:
      context: .
      dockerfile: fiap_5nett_tech.Contact/Dockerfile

  fiap_5nett_tech.api.contact.create:
    image: fiap_5nett_tech.api.contact.create
    build:
      context: .
      dockerfile: fiap_5nett_tech.Api.Contact.Create/Dockerfile

  fiap_5nett_tech.api.contact.create.consumer:
    image: fiap_5nett_tech.api.contact.create.consumer
    build:
      context: .
      dockerfile: fiap_5nett_tech.Api.Contact.Create.Consumer/Dockerfile

  consoleapp1:
    image: consoleapp1
    build:
      context: .
      dockerfile: ConsoleApp1/Dockerfile

  webapplication1:
    image: webapplication1
    build:
      context: .
      dockerfile: WebApplication1/Dockerfile

  fiap_5nett_tech.api.contact.create.consumer:
    image: fiap_5nett_tech.api.contact.create.consumer
    build:
      context: .
      dockerfile: fiap_5nett_tech.Api.Contact.Create.Consumer/Dockerfile
